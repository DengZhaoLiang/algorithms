package com.algorithm.sort;

/**
 * 归并排序算法
 * 
 * 基本思想：
 * 采用分治法（Divide and Conquer）的思想。
 * 将待排序数组分成若干个子序列，每个子序列是有序的，
 * 然后再将有序子序列合并为整体有序序列。
 * 
 * 时间复杂度：
 * - 最好情况：O(nlogn)
 * - 最坏情况：O(nlogn)
 * - 平均情况：O(nlogn)
 * 
 * 空间复杂度：O(n)，需要额外的数组空间
 * 
 * 稳定性：稳定
 * 
 * 优点：
 * 1. 稳定的排序算法
 * 2. 时间复杂度稳定，不受输入数据的影响
 * 3. 适合处理大数据量
 * 4. 适合外部排序
 * 
 * 缺点：
 * 1. 需要额外的内存空间
 * 2. 对于小规模数据，可能比简单排序算法慢
 * 
 * 算法步骤：
 * 1. 分割：递归地把当前序列平均分割成两半
 * 2. 集成：在保持元素顺序的同时将上一步得到的子序列集成到一起
 * 
 * 适用场景：
 * 1. 数据量大
 * 2. 要求排序稳定
 * 3. 有足够的内存空间
 * 4. 适合于链表排序
 */
public class MergeSort implements Sort {
    @Override
    public void sort(int[] arr) {
        // 在这里实现归并排序算法
        // 提示：
        // 1. 创建一个辅助数组
        // 2. 实现递归的归并方法
        // 3. 实现合并两个有序数组的方法
    }

    @Override
    public String getName() {
        return "归并排序";
    }
} 